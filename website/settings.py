"""
Django settings for website project.

Generated by 'django-admin startproject' using Django 5.1.6.
"""

import os
from pathlib import Path

# ===== –ë–∞–∑–æ–≤—ã–µ –ø—É—Ç–∏ =====
BASE_DIR = Path(__file__).resolve().parent.parent
LOGIN_URL = 'login'

# ===== –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å =====
SECRET_KEY = os.getenv('SECRET_KEY', 'fallback-key')
DEBUG = os.getenv('DEBUG', '0') == '1'
ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', 'localhost,127.0.0.1').split(',') if not DEBUG else ['*']

# ===== –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è =====
INSTALLED_APPS = [
    'django_prometheus',   # üîπ –¥–æ–±–∞–≤–ª–µ–Ω–æ
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'main',
    'cloudinary',
    'cloudinary_storage',
]

MIDDLEWARE = [
    'django_prometheus.middleware.PrometheusBeforeMiddleware',  # üîπ –¥–æ –≤—Å–µ–≥–æ
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_prometheus.middleware.PrometheusAfterMiddleware',   # üîπ –ø–æ—Å–ª–µ –≤—Å–µ–≥–æ
]

ROOT_URLCONF = 'website.urls'
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'website.wsgi.application'

# ===== –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö =====
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# ===== Cloudinary =====
import os
from pathlib import Path

BASE_DIR = Path(__file__).resolve().parent.parent

# –ï—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏–º —Ñ–∞–π–ª `.env` ‚Äî —á–∏—Ç–∞–µ–º –µ–≥–æ
env_path = BASE_DIR / '.env'
if env_path.exists():
    with open(env_path) as f:
        for line in f:
            if line.strip() and not line.startswith('#'):
                key, value = line.strip().split('=', 1)
                os.environ.setdefault(key, value)

CLOUDINARY_URL = os.getenv('CLOUDINARY_URL')
if not CLOUDINARY_URL:
    raise RuntimeError("‚ùå CLOUDINARY_URL –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")

DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'
MEDIA_URL = ''
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# ===== –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–æ–ª–µ–π =====
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# ===== –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è =====
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# ===== –°—Ç–∞—Ç–∏–∫–∞ =====
STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# ===== –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–ª–µ =====
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# ===== –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –ø–µ—á–∞—Ç—å =====
print("Cloudinary URL from env:", CLOUDINARY_URL)
from django.core.files.storage import default_storage
print("Default storage backend:", default_storage)
